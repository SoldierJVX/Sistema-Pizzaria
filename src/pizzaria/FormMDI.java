/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pizzaria;

import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author SoldierJVX
 */
public class FormMDI extends javax.swing.JFrame {

    ArrayList<Funcionario> listaFuncionarios;
    ArrayList<Cliente> listaClientes;
    ArrayList<Produto> listaProdutos;
    ArrayList<Pedido> listaPedidos;

    public FormMDI() {
        initComponents();

        carregarDados();

        this.listaProdutos = listaProdutos;
        
        //listaFuncionarios.add(new Funcionario("adm", "adm", "Administrador"));
        //carregarProdutos();

        this.setEnabled(false);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setVisible(true);

        new FormSelecaoUsuario(listaFuncionarios, listaClientes, listaProdutos, listaPedidos);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pizzaria - Pizzaria");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMDI().setVisible(true);
            }
        });
    }

    private void carregarDados() {

        listaFuncionarios = Persistencia.carregaFuncionarios(this.listaFuncionarios);
        listaClientes = Persistencia.carregaClientes(this.listaClientes);
        listaProdutos = Persistencia.carregaProdutos(this.listaProdutos);
        listaPedidos = Persistencia.carregaPedidos(this.listaPedidos);

        if (this.listaFuncionarios == null) {
            listaFuncionarios = new ArrayList<>();
        }
        if (this.listaClientes == null) {
            listaClientes = new ArrayList<>();
        }
        if (this.listaProdutos == null) {
            listaProdutos = new ArrayList<>();
        }
        if (this.listaPedidos == null) {
            listaPedidos = new ArrayList<>();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private void carregarProdutos() {

        listaProdutos.add(new Produto(listaProdutos.size(), "4 Estações", "Mussarela, presunto, palmito e funghi* (*cogumelo fresco).", 25.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "4 Queijos", "Mussarela, provolone, parmesão e queijo tipo catupiry.", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "5 Queijos", "Mussarela, provolone, parmesão, gorgonzola e queijo tipo catupiry.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Abobrinha", "Mussarela, abobrinha, presunto de Parma e queijo Polenguinho.", 24.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Alcachofra Especial", "Mussarela, coração de alcachofra, presunto de Parma e azeitona preta.", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Alcachofra Premium", "Mussarela, queijo Polenguinho, coração de alcachofra, palmito e shimeji.", 28.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Alho e Óleo", "Mussarela e alho frito.", 23.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Alho Poró", "Mussarela, calabresa fatiada, alho poró e tomate picado.", 26.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Aliche", "Mussarela e aliche.", 23.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Americana", "Mussarela, frango temperado e cheddar.", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Árabe", "Mussarela, carne moída com tempero árabe e tomate picado - acompanha limão.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Atum", "Mussarela e atum.", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Baggio", "Mussarela, funghi* e presunto de parma (*cogumelo fresco).", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Baiana", "Mussarela, calabresa moída, cebola, ovo e pimenta calabresa (opcional).", 29.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Berinjela", "Mussarela, berinjela temperada refogada e manjericão fresco.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Blumenau", "Molho parmegiana, mussarela, linguiça Blumenau e manjericão fresco.", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Bolonhesa", "Mussarela, molho bolonhesa e manjericão fresco.", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Brócolis", "Mussarela, brócolis, provolone e alho frito.", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Caipira", "Mussarela, frango temperado, queijo tipo catupiry ou cheddar e batata palha.", 29.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Calabresa", "Mussarela e calabresa fatiada..", 24.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Calabresa com Cebola", "Mussarela, calabresa fatiada e cebola.", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Calabresa Paulista", "Calabresa fatiada e cebola – sem mussarela.", 25.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Camarão", "Mussarela, camarão tipo exportação e shimeji.", 29.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Camarão Especial", "Mussarela, camarão tipo exportação, rúcula, queijo Polenguinho e azeitona preta.", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Caprese", "Mussarela, mussarela de búfala, tomate seco, pesto de azeitonas pretas* e manjericão fresco (*pasta de azeitonas pretas temperada com azeite de oliva e alho).", 29.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Carne Seca", "Mussarela, carne seca refogada com cebola e requeijão cremoso.", 29.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Capricciosa", "Mussarela, calabresa fatiada, cebola, palmito e azeitona verde.", 27.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Escarola", "Mussarela, escarola e provolone.", 25.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Escarola com Bacon", "Mussarela, escarola, provolone e bacon.", 28.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Escarola Especial", "Mussarela, escarola, cebola, parmesão e alho frito.", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Especial", "Mussarela, calabresa moída, milho verde, ovo, palmito, champignon e queijo tipo catupiry.", 30.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Figo, Requeijão e Lombinho", "Mussarela, lombo, figo, requeijão cremoso e amêndoas.", 29.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Frango com Catupiry", "Mussarela, frango temperado e queijo tipo catupiry.", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Funghi", "Mussarela e funghi* (*cogumelo fresco).", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Funghi Trifolati", "Mussarela e funghi trifolati* (*cogumelo paris + cogumelo chileno com ervas e tempero italiano).", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Gorgonzola", "Mussarela e gorgonzola.", 27.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Gorgonzola e Nozes", "Mussarela, gorgonzola, cebola refogada ou cebola crocante e nozes.", 28.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Gorgonzola com Tomate Cereja", "Mussarela, gorgonzola e tomate cereja.", 27.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Havaiana", "Mussarela, presunto e abacaxi.", 27.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Italiana", "Mussarela, molho parmegiana, alcaparras e manjericão fresco.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "La Fiorentina", "Calabresa moída, alho poró e ovo estalado – sem mussarela.", 29.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Lombo", "Mussarela e lombo.", 27.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Lombo e Catupiry", "Mussarela, lombo e queijo tipo catupiry.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Lombo e Champignon", "Mussarela, lombo e champignon.", 28.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Marguerita", "Mussarela e manjericão fresco.", 27.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Mexicana", "Mussarela, calabresa moída, pimentão e pimenta calabresa (opcional).", 30.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Milho", "Mussarela e milho verde.", 26.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Milho com Bacon", "Mussarela, milho verde e bacon.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Mussarela de Búfala", "Mussarela, mussarela de búfala e manjericão fresco.", 29.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Napolitana", "Mussarela, tomate fatiado e parmesão.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Palmito", "Mussarela, presunto e palmito.", 25.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Paulista", "Mussarela, palmito, ervilha e milho verde.", 26.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Parma", "Mussarela, mussarela de búfala e presunto de Parma.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Parma Especial", "Mussarela, presunto de Parma, rúcula e lascas de parmesão.", 29.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Parmegiana", "Mussarela, molho parmegiana e parmesão.", 26.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Peito de Peru", "Mussarela e peito de peru.", 28.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Pepperoni", "Mussarela, pepperoni e pimenta rosa. ", 25.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Portuguesa", "Mussarela, presunto, cebola, ovo e azeitonas verdes.", 28.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Ricota com Espinafre", "Mussarela, ricota e espinafre.", 26.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Romana", "Mussarela e presunto.", 26.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Romanesca", "Mussarela, presunto, funghi* e queijo tipo catupiry (*cogumelo fresco).", 28.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Rúcula", "Mussarela, tomate seco e rúcula.", 25.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Siciliana", "Mussarela, tomate picado e manjericão fresco.", 24.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Tomate Seco", "Mussarela, tomate seco e manjericão fresco.", 27.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Toscana", "Mussarela, calabresa moída e ovo.", 29.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Vegetariana", "Mussarela, escarola, cebola, palmito, milho verde, tomate picado e azeitona verde.", 29.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Pepsi - Lata", "Refrigerante de lata.", 4.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Pepsi - 1L", "Refrigerante de 1L.", 5.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Pepsi - 2L", "Refrigerante de 2L.", 6.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Pepsi Twist - 2L", "Refrigerante de 2L.", 6.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Coca-cola - 1L", "Refrigerante de 1L.", 6.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Coca-cola - 2L", "Refrigerante de 2L.", 6.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Coca-cola - 2,5L", "Refrigerante de 2,5L.", 7.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Fanta", "Refrigerante de 2L.", 5.50, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Suco - Lata", "Lata.", 4.00, null));
        listaProdutos.add(new Produto(listaProdutos.size(), "Suco - 2L", "Caixa de 2L.", 6.00, null));

    }

}
